Dump of assembler code for function phase_1:
   0x08048e53 <+0>:	push   %ebp ; Update the frame pointer
   0x08048e54 <+1>:	mov    %esp,%ebp ; Update the frame pointer
   0x08048e56 <+3>:	sub    $0x18,%esp ; Make some room on the stack
   0x08048e59 <+6>:	movl   $0x804a174,0x4(%esp) ; Move 2nd arg
   0x08048e61 <+14>:	mov    0x8(%ebp),%eax ; Move 1st arg
   0x08048e64 <+17>:	mov    %eax,(%esp) ; Put the value of the input as %esp
   0x08048e67 <+20>:	call   0x8048fbb <strings_not_equal> ; Call fn
   0x08048e6c <+25>:	test   %eax,%eax ; Check to see if the call set eax to 0
   0x08048e6e <+27>:	je     0x8048e75 <phase_1+34> ; Skip explode if equal
   0x08048e70 <+29>:	call   0x80491b9 <explode_bomb> ; BOOM!
   0x08048e75 <+34>:	leave  ; Done
   0x08048e76 <+35>:	ret    ; Return
End of assembler dump.
